{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\nlet field_none = 'block';\n// let field_none = 'none';\nlet gacha_none = 'none';\n// let gacha_none = 'block';\n\nconst INIT_USR_DATA_ARRAY_0 = [{\n\tID: 0,\n\tTYPE: 'USR',\n\tSPAWN_Y_X: [9, 0],\n\tNAME: 'USR_0',\n\tLFP: 100,\n\tATK: 10,\n\tEQP: [\n\t\t{RARITY: 3, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 4, ATK_DEBUFF: 0, \n\t\t\tMAGIC: \n\t\t\t\t[\n\t\t\t\t\t{MAGIC_COUNT: null},\n\t\t\t\t\t[\n\t\t\t\t\t\t[0,  0,  0],\n\t\t\t\t\t\t[0, 'U', 0],\n\t\t\t\t\t\t[0,  0,  0],\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t},\n\t\t{RARITY: 2, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 0, ATK_DEBUFF: 0, MAGIC: \n\t\t\t[\n\t\t\t\t{MAGIC_COUNT: 1},\n\t\t\t\t[\n\t\t\t\t\t[0,  1,  0],\n\t\t\t\t\t[1, 'U', 1],\n\t\t\t\t\t[0,  1,  0],\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t\t{RARITY: 4, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 0, ATK_DEBUFF: 0, MAGIC: \n\t\t\t[\n\t\t\t\t{MAGIC_COUNT: 1},\n\t\t\t\t[\n\t\t\t\t\t[1, 1,  1,  1, 1],\n\t\t\t\t\t[1, 0,  0,  0, 1],\n\t\t\t\t\t[1, 0, 'U', 0, 1],\n\t\t\t\t\t[1, 0,  0,  0, 1],\n\t\t\t\t\t[1, 1,  1,  1, 1],\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t],\n\tGOLD: 3,\n}];\n\nconst INIT_USR_DATA_ARRAY_1 = [{\n\tID: 1,\n\tTYPE: 'USR',\n\tSPAWN_Y_X: [0, 0],\n\tNAME: 'USR_1',\n\tLFP: 100,\n\tATK: 10,\n\tEQP: [\n\t\t{RARITY: 3, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 4, ATK_DEBUFF: 0, \n\t\t\tMAGIC: \n\t\t\t\t[\n\t\t\t\t\t{MAGIC_COUNT: null},\n\t\t\t\t\t[\n\t\t\t\t\t\t[0,  0,  0],\n\t\t\t\t\t\t[0, 'U', 0],\n\t\t\t\t\t\t[0,  0,  0],\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t},\n\t\t{RARITY: 2, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 0, ATK_DEBUFF: 0, MAGIC: \n\t\t\t[\n\t\t\t\t{MAGIC_COUNT: 1},\n\t\t\t\t[\n\t\t\t\t\t[0,  1,  0],\n\t\t\t\t\t[1, 'U', 1],\n\t\t\t\t\t[0,  1,  0],\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t\t{RARITY: 4, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 0, ATK_DEBUFF: 0, MAGIC: \n\t\t\t[\n\t\t\t\t{MAGIC_COUNT: 1},\n\t\t\t\t[\n\t\t\t\t\t[1, 1,  1,  1, 1],\n\t\t\t\t\t[1, 0,  0,  0, 1],\n\t\t\t\t\t[1, 0, 'U', 0, 1],\n\t\t\t\t\t[1, 0,  0,  0, 1],\n\t\t\t\t\t[1, 1,  1,  1, 1],\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t],\n\tGOLD: 3,\n}];\nconst INIT_USR_DATA_ARRAY_2 = [{\n\tID: 2,\n\tTYPE: 'USR',\n\tSPAWN_Y_X: [9, 9],\n\tNAME: 'USR_2',\n\tLFP: 100,\n\tATK: 10,\n\tEQP: [\n\t\t{RARITY: 3, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 4, ATK_DEBUFF: 0, \n\t\t\tMAGIC: \n\t\t\t\t[\n\t\t\t\t\t{MAGIC_COUNT: null},\n\t\t\t\t\t[\n\t\t\t\t\t\t[0,  0,  0],\n\t\t\t\t\t\t[0, 'U', 0],\n\t\t\t\t\t\t[0,  0,  0],\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t},\n\t\t{RARITY: 2, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 0, ATK_DEBUFF: 0, MAGIC: \n\t\t\t[\n\t\t\t\t{MAGIC_COUNT: 1},\n\t\t\t\t[\n\t\t\t\t\t[0,  1,  0],\n\t\t\t\t\t[1, 'U', 1],\n\t\t\t\t\t[0,  1,  0],\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t\t{RARITY: 4, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 0, ATK_DEBUFF: 0, MAGIC: \n\t\t\t[\n\t\t\t\t{MAGIC_COUNT: 1},\n\t\t\t\t[\n\t\t\t\t\t[1, 1,  1,  1, 1],\n\t\t\t\t\t[1, 0,  0,  0, 1],\n\t\t\t\t\t[1, 0, 'U', 0, 1],\n\t\t\t\t\t[1, 0,  0,  0, 1],\n\t\t\t\t\t[1, 1,  1,  1, 1],\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t],\n\tGOLD: 3,\n}];\n\nlet START_CURRENT_Y_AND_X_ARRAY = [];\nconst set_USR_to_init_position = () => {\t\n\tconst all_INIT_USR_DATA_ARRAY = [INIT_USR_DATA_ARRAY_0, INIT_USR_DATA_ARRAY_1, INIT_USR_DATA_ARRAY_2];\n\n\tSTART_CURRENT_Y_AND_X_ARRAY = all_INIT_USR_DATA_ARRAY\n\t\t.map(V=>V.map(v=>v['SPAWN_Y_X']))\n\t\t\t.flat();\n\t// USRを初期位置に設定\n\t\t// COLLECT_VALUE2[9][0][2] = 'USR'; COLLECT_VALUE2[9][0][3] = 'background-color: #0000FF';\n\tSTART_CURRENT_Y_AND_X_ARRAY.forEach((V, I) => {\n\t\tCOLLECT_VALUE2[V[0]][V[1]][2] = 'USR';\n\t\tCOLLECT_VALUE2[V[0]][V[1]][3] = 'background-color: #0000FF';\n\t});\n};\nconst clone_START_CURRENT_Y_AND_X_ARRAY = () => R.clone(START_CURRENT_Y_AND_X_ARRAY);\n\nlet CURRENT_Y_AND_X = clone_START_CURRENT_Y_AND_X_ARRAY();\nlet CURRENT_USER_ID = 0;\nlet UNIT_TURN = false;\n\n// CURRENT_USER_IDを1増やし、USR_DATA_ARRAYの最大のIDを超えたら0に戻す関数\nconst change_CURRENT_USR_ID = () => {\n\t// USRが行動中はUNIT_TURNはfalseで、USRが行動を終えたらUNIT_TURNはtrueになる\n\tUNIT_TURN = false;\n\n\t// USR_DATA_ARRAYの最大のIDを取得する関数\n\tconst get_max_ID = () => {\n\t\tconst ID_ARY = USR_DATA_ARRAY.map(V=>V['ID']);\n\t\tconst max_ID = Math.max(...ID_ARY);\n\t\treturn max_ID;\n\t}\n\tconst to_be_unit_turn = () => UNIT_TURN = true;\n\tconst return_zero_for_CURRENT_USER_ID_reset = () => 0;\n\tconst to_be_unit_turn_and_return_zero_for_CURRENT_USER_ID_reset = () => {\n\t\tto_be_unit_turn();\n\t\treturn return_zero_for_CURRENT_USER_ID_reset();\n\t}\n\n\t// CURRENT_USER_IDを1増やす。max_IDを超えたら0に戻す\n\tCURRENT_USER_ID = CURRENT_USER_ID + 1 > get_max_ID() ?\n\t\tto_be_unit_turn_and_return_zero_for_CURRENT_USER_ID_reset() :\n\t\tCURRENT_USER_ID + 1;\n}\n\t\n// USR_DATA_ARRAYのデータをCOLLECT_VALUE2に反映させるための関数\nconst reflect_USR_DATA = () =>{\n\t// USR_DATA_ARRAYのNAMEとTYPEをobject形式でmap関数でreflect_DATAに追加する\n\tlet reflect_DATA = USR_DATA_ARRAY.map(V=>{\n\t\treturn {NAME: V['NAME'], TYPE: V['TYPE'], BACK_COLOR: 'background-color: #0000FF'};\n\t});\n\t// return reflect_DATA;\n\treflect_DATA.forEach((V,I)=>{\n\t\tCOLLECT_VALUE2[CURRENT_Y_AND_X[I][0]][CURRENT_Y_AND_X[I][1]][2] = V.TYPE;\n\t\tCOLLECT_VALUE2[CURRENT_Y_AND_X[I][0]][CURRENT_Y_AND_X[I][1]][3] = V.BACK_COLOR;\n\t})\n}\n\n// spawn関数はUNTを誕生させる関数\n// Target_UNT_NUMに隣接するNONにUNTを誕生させる\n// Target_UNT_NUMに隣接するNONが無い場合、UNT_NUMに隣接するNONにUNTを誕生させる\n// Target_UNT_NUMとUNT_NUMどちらにも隣接するNONが無い場合spawnは実行されない\nconst spawn = (UNT_NUM, Target_UNT_NUM) => {\ntry {\n\tconst unt_position = get_UNT_position(UNT_NUM);\n\tconst UNT_ADJACENT_Y_AND_X = get_click_position(unt_position[0], unt_position[1], false);\n\tconst Target_UNT_position = get_UNT_position(Target_UNT_NUM);\n\tconst Target_UNT_ADJACENT_Y_AND_X = get_click_position(Target_UNT_position[0], Target_UNT_position[1], false);\n\n\tconst get_NON_position = (UNT_NUM) => {\n\t\tconst unt_position = get_UNT_position(UNT_NUM);\n\t\tconst UNT_ADJACENT_Y_AND_X = get_click_position(unt_position[0], unt_position[1], false);\n\t\tconst NEAR_NON_POSITION = UNT_ADJACENT_Y_AND_X.filter(V=>COLLECT_VALUE2[V[0]][V[1]][2] === 'NON');\n\t\t// near_non_positionが空の場合、COLLECT_VALUE2の中のNONの位置をランダムに一つ選択する\n\t\tif(NEAR_NON_POSITION.length === 0){\n\t\t\tconst NOT_NEAR_NON_POSITION = [];\n\t\t\tCOLLECT_VALUE2.forEach((V, I)=>{\n\t\t\t\tV.forEach((v, i)=>{\n\t\t\t\t\tif(v[2] === 'NON'){\n\t\t\t\t\t\tNOT_NEAR_NON_POSITION.push([I, i]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t// シャッフルして返す\n\t\t\treturn shuffle(NOT_NEAR_NON_POSITION);\n\t\t}\n\t\treturn NEAR_NON_POSITION;\n\t};\n\n\n\t// UNT_DATA_OBJのNAMEの最大値+1を取得する関数\n\tconst get_new_UNT_NUM = () => {\n\t\tconst UNT_NUM_ARY = Object.keys(UNT_DATA_OBJ).map(V=>Number(V.split('_')[2]));\n\t\tconst max_UNT_NUM = Math.max(...UNT_NUM_ARY);\n\t\tconst new_UNT_NUM = max_UNT_NUM + 1;\n\t\treturn new_UNT_NUM;\n\t}\n\n\t// 誕生するUNTのプロパティを設定する。\n\t// UNTのLFPとATKはUNT_NUMとTarget_UNT_NUMのLFPとATKの合計値\n\tconst new_UNT = {\n\t\tTYPE: 'UNT',\n\t\tNAME: 'UNT_' + (get_new_UNT_NUM()).toString(),\n\t\tLFP: UNT_DATA_OBJ['UNT_NUM_' + (UNT_NUM).toString()]['LFP'] + UNT_DATA_OBJ['UNT_NUM_' + (Target_UNT_NUM).toString()]['LFP'],\n\t\tATK: UNT_DATA_OBJ['UNT_NUM_' + (UNT_NUM).toString()]['ATK'] + UNT_DATA_OBJ['UNT_NUM_' + (Target_UNT_NUM).toString()]['ATK'],\n\t\tGLD: UNT_DATA_OBJ['UNT_NUM_' + (UNT_NUM).toString()]['GLD'] + UNT_DATA_OBJ['UNT_NUM_' + (Target_UNT_NUM).toString()]['GLD'],\n\t\tBDP: 0,\n\t\tRBP: 0,\n\t};\n\tnew_UNT['BDP'] = new_UNT['LFP'] * new_UNT['ATK'];\n\n\t// NONの位置を取得する\n\tconst NON_POSITION = get_NON_position(UNT_NUM);\n\t// NONの中から一つをランダムで選択する\n\tconst random_NON_POSITION = shuffle(NON_POSITION)[0];\n\n\t// new_UNTをUNT_DATA_OBJに追加する\n\t// random_NON_POSITIONにnew_UNTを追加する\n\t// back_groundの色を変更する\n\tif(\n\t\trandom_NON_POSITION !== undefined &&\n\t\tCOLLECT_VALUE2[random_NON_POSITION[0]][random_NON_POSITION[1]][2] === 'NON'\n\t){\n\t\tUNT_DATA_OBJ['UNT_NUM_' + (get_new_UNT_NUM()).toString()] = new_UNT;\n\t\tCOLLECT_VALUE2[random_NON_POSITION[0]][random_NON_POSITION[1]][2] = new_UNT;\n\t\tCOLLECT_VALUE2[random_NON_POSITION[0]][random_NON_POSITION[1]][3] = 'background-color: #00FF00;';\n\t\tconsole.log('UNT is born!!');\n\t}\n\n} catch (error) {\n\tconsole.log(error);\n\t// errorがあった場合、UNT_DATA_OBJからnew_UNTを削除する\n\tUNT_DATA_OBJ = R.omit(['UNT_NUM_' + (get_new_UNT_NUM()).toString()], UNT_DATA_OBJ);\n\t// errorがあった場合、COLLECT_VALUE2からnew_UNTを削除し、NONに戻す\n\tCOLLECT_VALUE2[random_NON_POSITION[0]][random_NON_POSITION[1]][2] = 'NON';\n\t// errorがあった場合、COLLECT_VALUE2からnew_UNTの背景色を削除する\n\tCOLLECT_VALUE2[random_NON_POSITION[0]][random_NON_POSITION[1]][3] = 'background-color: #FFFFFF;';\n}\n};\n\n\n// breeding points(BDP)はUNTのLFPとATKを掛けた値\n// BDP = LFP * ATK\n// remain breeding points(RBP)の初期値は0でbreedによって加算される\n// RBPがBDPを超えたらUNTが誕生する\n// ATKの値がbreed関数によってRBPに加算される\nconst breed = (UNT_NUM, Target_UNT_NUM_Ary) => {\n\t// console.log(UNT_NUM, Target_UNT_NUM_Ary);\n\tTarget_UNT_NUM_Ary.forEach(Target_UNT_NUM=>{\n\t\tconst UNIT_NAME = 'UNT_NUM_' + (UNT_NUM).toString();\n\t\tconst Target_UNT_NUM_NAME = 'UNT_NUM_' + (Target_UNT_NUM).toString();\n\t\t// UNT_NUMのLFPとATKの合計値\n\t\t// UNT_NUMのLFPとATKの合計値をTarget_UNT_NUMのRBPに加算する\n\t\tUNT_DATA_OBJ[Target_UNT_NUM_NAME]['RBP'] += UNT_DATA_OBJ[UNIT_NAME]['ATK']\n\t\tif(UNT_DATA_OBJ[Target_UNT_NUM_NAME]['RBP'] >= UNT_DATA_OBJ[Target_UNT_NUM_NAME]['BDP']){\n\t\t\t// console.log('BREED!!', UNT_NUM, Target_UNT_NUM_NAME);\n\t\t\tspawn(UNT_NUM, Target_UNT_NUM);\n\t\t\t// RBPがBDPを超えたらUNTが誕生する\n\t\t\t// RBPを0にする\n\t\t\tUNT_DATA_OBJ[Target_UNT_NUM_NAME]['RBP'] = 0;\n\t\t}\n\t});\n};\n\nlet rootElement;\n\n\nconst EQP_LIMIT = 10;\nlet KILL_STREAK = 0;\nconst kill_streak_stack_get_more_gold = ({Unt_Gld=0, Kill_Streak=0}) => {\n\tconsole.log(\n\t\tUnt_Gld,\n\t\tKill_Streak\n\t)\n\treturn (Unt_Gld * Kill_Streak);\n};\n// UNT_DATA_OBJ[UNT_NUM_N]['GLD']\n\nconst what_sort_by_any = ({\n\t\tWhat=MINE,\n\t\tAny='RARITY',\n\t\tAsc_Desc='DESC',\n\t}) => {\n\t\t// What = What.sort((a,b)=>b['RARITY'] - a['RARITY']);\n\t\t// console.log(\"What\");\n\t\tAsc_Desc ?\n\t\tWhat = What.sort((a,b)=>b[Any] - a[Any]) :\n\t\tWhat = What.sort((a,b)=>a[Any] - b[Any]);\n};\n\nimport { onMount } from 'svelte';\n// import { beforeUpdate, afterUpdate } from 'svelte';\n\n\n$: MINE && what_sort_by_any({What: MINE, Any: 'RARITY', Asc_Desc: 'DESC'});\n// $: USR_DATA_ARRAY && console.log('update');\n$: rootElement && rootElement.style.setProperty('--field-none', field_none);\n$: rootElement && rootElement.style.setProperty('--gacha-none', gacha_none);\n\nconst switch_field_gacha = () => {\n\tfield_none = field_none === 'none' ? 'block' : 'none';\n\tgacha_none = gacha_none === 'none' ? 'block' : 'none';\n};\n\nconst UN_EQP = (Eqp_Index, Usr_Id=0) => {\n\t// MINEに指定したUSR_DATA_ARRAYのEqpを追加する\n\tMINE = R.append(USR_DATA_ARRAY[Usr_Id]['EQP'][Eqp_Index], MINE);\n\t// USR_DATA_ARRAY[Usr_Id].EQPオブジェクトから指定したUSR_DATA_ARRAYのEqpを削除する\n\tUSR_DATA_ARRAY[Usr_Id]['EQP'] = R.remove(Eqp_Index, 1, USR_DATA_ARRAY[Usr_Id]['EQP']);\n}\n\n\n\nconst recharge_magic_count = (Usr_Id=0) => {\n\tUSR_DATA_ARRAY[Usr_Id]['EQP'].map((V, Eqp_Index) => {\n\t\t\tif(V['MAGIC'][0]['MAGIC_COUNT'] !== null){\n\t\t\t\tV['MAGIC'][0]['MAGIC_COUNT'] = 1;\n\t\t\t\t// return V['MAGIC'][0]['MAGIC_COUNT'];\n\t\t\t}\n\t\t})\n}\n\n\n// beforeUpdate(async () => {\n// \ttry {\n// \t\trecharge_magic_count();\n// \t} catch (error) {\n// \t\tconsole.log(error);\t\t\n// \t}\n// });\n\nconst next_field = () => {\n\tMINE = [];\n\tswitch_field_gacha();\n\t// recharge_magic_count();\n};\n\n// .field .gachaのdisplayをnoneを切り替える関数\nconst toggle_gacha_display = () => {\n\tconst gacha = document.querySelector('.gacha');\n\tgacha.style.display = gacha.style.display === 'none' ? 'block' : 'none';\n\tconst field = document.querySelector('.field');\n\tfield.style.display = field.style.display === 'none' ? 'block' : 'none';\n};\n\n\nconst LFP_ATK_Range_Array_Min_Max_Table = [\n\t{LFP_Min: 2,LFP_Max: 10,ATK_Min: 1,ATK_Max: 3,},\n\t{LFP_Min: 5,LFP_Max: 8,ATK_Min: 3,ATK_Max: 10,},\n];\n\n\n\nconst make_UNT_DATA_OBJ = ({\n\t\tRepeat_Array_Num=1,\n\t\tRepeat_Array_Times=20,\n\t\tLFP_Range_Array=[2, 10],\n\t\tATK_Range_Array=[1, 3],\n\t\tGLD_Range_Array=[1, 2],\n\t\t// BDP_Rate=1,\n\t\tBDP_Rate=5,\n\t}) => {\n\tconst UNT_DATA_OBJ = {};\n\t// 特定の範囲の配列からランダムで1つ選択する関数\n\tconst get_randam_range = ({Range=[1,10]}) => {\n\t\tconst min = Range[0];\n\t\tconst max = Range[1];\n\t\tconst randam = Math.floor(Math.random() * (max + 1 - min)) + min;\n\t\treturn randam;\n\t};\n\n\t// R.repeatで指定した数字を指定した回数繰り返す配列を返す関数\n\tconst repeat_array = (num, times) => R.repeat(num, times);\n\n\t// breeding points(BDP)はUNTのLFPとATKを掛けた値\n\t// BDP = LFP * ATK\n\t// remain breeding points(RBP)の初期値は0でbreedによって加算される\n\t// RBPがBDPを超えたらUNTが誕生する\n\t// LFPとATKの合計値がbreed関数によってRBPに加算される\n\t// BDP_RateはBDPの調整する。デフォルトは1。多いほどbreedが遅くなる\n\n\t// MINEからUNT_DATA_OBJを作成する\n\trepeat_array(Repeat_Array_Num, Repeat_Array_Times).forEach((V, I) => {\n\t\tUNT_DATA_OBJ['UNT_NUM_' + (I).toString()] = {\n\t\t\tTYPE: 'UNT',\n\t\t\tNAME: 'UNT_' + (I).toString(),\n\t\t\tLFP: V * get_randam_range({Range: LFP_Range_Array}),\n\t\t\tATK: V * get_randam_range({Range: ATK_Range_Array}),\n\t\t\tGLD: get_randam_range({Range: GLD_Range_Array}),\n\t\t\tBDP: 0,\n\t\t\tRBP: 0,\n\t\t};\n\t\tUNT_DATA_OBJ['UNT_NUM_' + (I).toString()]['BDP'] = \n\t\t\tUNT_DATA_OBJ['UNT_NUM_' + (I).toString()]['LFP'] * \n\t\t\tUNT_DATA_OBJ['UNT_NUM_' + (I).toString()]['ATK'] * BDP_Rate;\n\t});\n\treturn UNT_DATA_OBJ;\n};\n\n\nlet FLOOR = 0;\n// let SHOW_DAMAGE = 'ON';\nlet SHOW_DAMAGE = 'OFF';\nlet USR_DATA_ARRAY = [];\n\n\n\nconst retry_data_setup = () =>{\n\tUSR_DATA_ARRAY = R.clone(INIT_USR_DATA_ARRAY_0);\n\tconst ADDITIONAL_USR_DATA_ARRAY_1 = R.clone(INIT_USR_DATA_ARRAY_1);\n\tconst ADDITIONAL_USR_DATA_ARRAY_2 = R.clone(INIT_USR_DATA_ARRAY_2);\n\tUSR_DATA_ARRAY = R.concat(USR_DATA_ARRAY, ADDITIONAL_USR_DATA_ARRAY_1);\n\tUSR_DATA_ARRAY = R.concat(USR_DATA_ARRAY, ADDITIONAL_USR_DATA_ARRAY_2);\n};\nretry_data_setup();\n\n\nconst decrement_MAGIC_COUNTER = (EqpNum, Usr_Id=0) => {\n\tconsole.log(\n\t\tUsr_Id,\n// USR_DATA_ARRAY[Usr_Id],\n// USR_DATA_ARRAY[Usr_Id]['EQP'],\n// USR_DATA_ARRAY[Usr_Id]['EQP'][EqpNum],\n// USR_DATA_ARRAY[Usr_Id]['EQP'][EqpNum]['MAGIC'],\n// USR_DATA_ARRAY[Usr_Id]['EQP'][EqpNum]['MAGIC'][0],\n// USR_DATA_ARRAY[Usr_Id]['EQP'][EqpNum]['MAGIC'][0]['MAGIC_COUNT'],\n\t);\n\tif(USR_DATA_ARRAY[Usr_Id]['EQP'][EqpNum]['MAGIC'][0]['MAGIC_COUNT'] === null){\n\t\treturn;\n\t}\n\tUSR_DATA_ARRAY[Usr_Id]['EQP'][EqpNum]['MAGIC'][0]['MAGIC_COUNT'] -= 1\n};\n\nconst convert = (range) => {\n\tconst result = [];\n\trange.forEach((row, y) => {\n\t\trow.forEach((col, x) => {\n\t\t\tif (col === 1) {\n\t\t\t\tif(range[y][x] === 'U'){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresult.push([y, x]);\n\t\t\t}\n\t\t});\n\t});\n\treturn result;\n}\n\n// convert_for_magicを5行以内の関数に書き換える\nconst convert_for_magic = (range) => {\n\tconst center = range.map(V=>V.map((v, i)=>v === 'U' ? [i, V.indexOf(v)] : null))\n\t\t\t.flat().filter((v, i)=>v !== null)[0];\n\tconst non_center = range.map((V, I)=>V.map((v, i)=>v === 1 ? [I, i] : null))\n\t\t\t.flat()\n\t\t\t\t.filter(V=>V !== null);\n\t\t\t\t\t// .sort((a, b) => a[0] - b[0]).sort((a, b) => a[1] - b[1]);\n\tconst Y_X_FORM_RANGE = non_center.map(V=>[ (V[0] - center[0]), (V[1] - center[1]) ] );\n\treturn Y_X_FORM_RANGE;\n}\n\n// DEV_MODEではGOLの位置を固定する。USRの位置も固定する。UNTの位置も固定する。\n// 今後シードランダムを導入してNONの位置を固定する。\nlet DEV_MODE = true;\n\n// const set_EQP = (NAME, EQP, LIMIT, Eqp_Index) =>{\nconst set_EQP = ({\n\tEqp={'UNT_NUM_0': {ATK: 3,LFP: 4,NAME: \"UNT_0\",TYPE: \"UNT\"}},\n\t// Eqp_Limit=5,\n\tEqp_Index=0,\n\tUsr_Id=0,\n\t}) =>{\n\t\tconsole.log(Eqp, Usr_Id);\n\n\t// MINEから指定したUSR_DATA_ARRAYのNAMEのEQPを取得する\n\tconst USR_EQP = Eqp;\n\t// USR_EQPの長さがLIMITより大きかったら、USR_EQPをLIMITの数になるまでスライスする\n\tif(USR_DATA_ARRAY[Usr_Id]['EQP'].length >= EQP_LIMIT){\n\t\treturn;\n\t}\n\t// USR_DATA_ARRAY[Usr_Id].EQPオブジェクトにEQPをramda.jsで追加する\n\tUSR_DATA_ARRAY[Usr_Id]['EQP'] = R.append(Eqp, USR_DATA_ARRAY[Usr_Id]['EQP']);\n\t// USR_DATA_ARRAY.filter(V=>V['ID']=== Usr_Id )[0]['EQP'] = R.append(Eqp, USR_DATA_ARRAY[Usr_Id]['EQP']);\n\t// Object.values(USR_DATA_ARRAY[Usr_Id])[4] = R.append(Eqp, USR_DATA_ARRAY[Usr_Id]['EQP']);\n\t// MINEから指定したUSR_DATA_ARRAYのNAMEのEQPをUSR_EQP_SLICE_PUSHに更新する\n\n\t// console.log(MINE);\n\t\tMINE = R.remove(Eqp_Index, 1, MINE);\n\t\t// console.log(MINE);\n\n};\n\nconst LFP_RECHARGE_NUM = 10;\nlet UNT_DATA_OBJ = {};\n\nlet GOLD = 3;\nlet MINE = [];\n\nlet KAKUHEN = false;\nlet KAKUHEN_COUNTER = 0;\n\nconst KAKUHEN_COUNTER_LIMIT = 30;\nconst RARITY_ZERO_VOLUME = 80;\nconst PROBABILITY_CHANGE_THRESHOLD_0 = 2;\nconst PROBABILITY_CHANGE_THRESHOLD_1 = 3;\nconst DECREASE_PERCENT = 90;\nconst no_magic = () => [{MAGIC_COUNT: null},[[0,  0,  0],[0, 'U', 0],[0,  0,  0],]];\nconst ORIGINAL_SLOT = [\n\t{RARITY: 0, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 1, ATK_DEBUFF: 0, MAGIC: R.clone(no_magic())},\n\t{RARITY: 1, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 2, ATK_DEBUFF: 0, MAGIC: R.clone(no_magic())},\n\t{RARITY: 2, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 3, ATK_DEBUFF: 0, MAGIC: R.clone(no_magic())},\n\t{RARITY: 3, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 4, ATK_DEBUFF: 0, MAGIC: R.clone(no_magic())},\n\n\t{RARITY: 90, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 10, ATK_DEBUFF: 0, MAGIC: R.clone(no_magic())},\n\n\t{RARITY: 2, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 0, ATK_DEBUFF: 0, MAGIC: \n\t\t[\n\t\t\t{MAGIC_COUNT: 1},\n\t\t\t[\n\t\t\t\t[1,  0,  1],\n\t\t\t\t[0, 'U', 0],\n\t\t\t\t[1,  0,  1],\n\t\t\t]\n\t\t]\n\t},\n\t{RARITY: 2, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 0, ATK_DEBUFF: 0, MAGIC: \n\t\t[\n\t\t\t{MAGIC_COUNT: 1},\n\t\t\t[\n\t\t\t\t[0,  1,  0],\n\t\t\t\t[1, 'U', 1],\n\t\t\t\t[0,  1,  0],\n\t\t\t]\n\t\t]\n\t},\n\t{RARITY: 3, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 0, ATK_DEBUFF: 0, MAGIC: \n\t\t[\n\t\t\t{MAGIC_COUNT: 1},\n\t\t\t[\n\t\t\t\t[1, 1,  1,  1, 1],\n\t\t\t\t[1, 0,  0,  0, 1],\n\t\t\t\t[1, 0, 'U', 0, 1],\n\t\t\t\t[1, 0,  0,  0, 1],\n\t\t\t\t[1, 1,  1,  1, 1],\n\t\t\t]\n\t\t]\n\t},\n\t{RARITY: 3, LFP_BUFF: 0, LFP_DEBUFF: 0, ATK_BUFF: 0, ATK_DEBUFF: 0, MAGIC: \n\t\t[\n\t\t\t{MAGIC_COUNT: 1},\n\t\t\t[\n\t\t\t\t[1, 0,  1,  0, 1],\n\t\t\t\t[0, 1,  1,  1, 0],\n\t\t\t\t[1, 1, 'U', 1, 1],\n\t\t\t\t[0, 1,  1,  1, 0],\n\t\t\t\t[1, 0,  1,  0, 1],\n\t\t\t]\n\t\t]\n\t},\n];\n// let SLOT = R.clone(ORIGINAL_SLOT);\nlet SLOT = ORIGINAL_SLOT;\n\n// $: if(true) console.log('hello');\n\nlet ERROR_MESSAGE = true;\n\nlet PICKEL = 0;\nlet GOAL = false;\nlet DIED = '';\nlet ADJACENT_Y_AND_X = [];\nlet COLLECT_VALUE2 = [];\n\nlet SLOT2 = [];\nlet SLOT3 = [];\nconst make_slot = () => {\n\t// SLOTのRARITYの合計の値が100になるように100個ランダムで選択する。\n\t// ただし、RARITYが90のものは1つだけ選択し、RARITYが0はRARITY_ZERO_VOLUME個選択する。\n\tSLOT2 = SLOT.reduce((accumulator, currentValue) => {\n\t\tconst RARITY = currentValue.RARITY;\n\t\tconst RARITY_NUM = currentValue.RARITY === 90 ?\n\t\t\t\t\t\t\t1 : currentValue.RARITY === 0 ?\n\t\t\t\t\t\t\t\t\tRARITY_ZERO_VOLUME : currentValue.RARITY;\n\t\tfor (let i = 0; i < RARITY_NUM; i++) {\n\t\t\taccumulator.push(currentValue);\n\t\t}\n\t\treturn accumulator;\n\t}, []);\n\tSLOT3 = shuffle(SLOT2);\n};\n\nmake_slot();\n// LFP_BUFFのみ\n// let SLOT4 = shuffle(SLOT2.slice(0, 100));\n\n// 任意のRARITYを任意のパーセンテージ減らす関数\nconst decrease_any_rarity = (Rarity, Percent) => {\n\tconst res0 = SLOT3.filter(V=>V.RARITY === Rarity);\n\t// res0の中身をPercentで減らす\n\tconst res1 = res0.slice(0, (res0.length - (res0.length * (Percent / 100))));;\n\tconst res2 = SLOT3.filter(V=>V.RARITY !== Rarity);\n\tconst res = res1.concat(res2);\n\tconst shuffle_res = shuffle(res);\n\treturn shuffle_res;\n};\n\n\nconst RATE_AND_X_PAIR = [\n\t{Rate: 1, X: 1},\n\t{Rate: 4, X: 3},\n\t{Rate: 8, X: 5},\n];\nconst make_high_rate_slot = ({Rate=1}) => {\n\tconsole.log('make_high_rate_slot');\n\tconsole.log(RATE_AND_X_PAIR.filter(V=>V.Rate === Rate)[0]['Rate']);\n\tif (Rate === 1) {\n\t\tSLOT = R.clone(ORIGINAL_SLOT);\n\t\tconst new_slot = SLOT.map(V=>{\n\t\t\tV['ATK_BUFF'] = V['ATK_BUFF'] * 1;\n\t\t\treturn V;\n\t\t})\n\t\tSLOT = R.clone(new_slot);\n\t\treturn;\n\t}\n\tif (Rate === RATE_AND_X_PAIR.filter(V=>V.Rate === Rate)[0]['Rate']) {\n\t\tSLOT = R.clone(ORIGINAL_SLOT);\n\t\tconst new_slot = SLOT.map(V=>{\n\t\t\tV['ATK_BUFF'] = V['ATK_BUFF'] * RATE_AND_X_PAIR.filter(V=>V.Rate === Rate)[0]['X'];\n\t\t\t// V['RARITY'] = V['RARITY'] * RATE_AND_X_PAIR.filter(V=>V.Rate === Rate)[0]['X'];\n\t\t\treturn V;\n\t\t})\n\t\tSLOT = R.clone(new_slot);\n\t}\n\t// if(Rate === 4){\n\t// \tconst new_slot = SLOT.map(V=>{\n\t// \t\tV['ATK_BUFF'] = V['ATK_BUFF'] * RATE_AND_X_PAIR.filter(V=>V.Rate === Rate)[0]['X'];\n\t// \t\treturn V;\n\t// \t})\n\t// \tSLOT = R.clone(new_slot);\n\t// }\n\t// if(Rate === 8){\n\t// \tconst new_slot = SLOT.map(V=>{\n\t// \t\tV['ATK_BUFF'] = V['ATK_BUFF'] * RATE_AND_X_PAIR.filter(V=>V.Rate === Rate)[0]['X'];\n\t// \t\treturn V;\n\t// \t})\n\t// \tconsole.log(new_slot);\n\t// \tSLOT = R.clone(new_slot);\n\t// }\n}\n\n// ワロタ https://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q14218518669\n// 関数。SLOT3からランダムで1つ選択してMINEに追加。GOLDが足りなかったら追加しない。GOLDが足りたらGOLDを減らす。\n// RARITYが1以上のものをPROBABILITY_CHANGE_THRESHOLD連続で追加できた場合、KAKUHENをtrueにする。\n// KAKUHEN true状態でKAKUHEN_COUNTER_LIMIT回選択した後にKAKUHENをfalseにする。\nconst slot_exe_once = ({Rate_Param=1}) =>{\n\tconsole.log('slot_exe_once');\n\tmake_high_rate_slot({Rate: Rate_Param});\n\tmake_slot();\n\t// KAKUHENがtrueの時はSLOT3からRARITYが0のものを選択する確率が低下する\n\tconst SLOT3_KAKUHEN = KAKUHEN ? decrease_any_rarity(0, DECREASE_PERCENT) : SLOT3;\n\t// SLOT3_KAKUHENからランダムで1つ選択する\n\tconst random_SLOT3_KAKUHEN = shuffle(SLOT3_KAKUHEN)[0];\n\t// GOLDが足りなかったら追加しない。GOLDが足りたらGOLDを減らす。\n\tif ((GOLD - Rate_Param) <= 0) {\n\t\treturn;\n\t}else{\n\t\tGOLD -= Rate_Param;\n\t}\n\t// MINEに追加する\n\tMINE = R.append(random_SLOT3_KAKUHEN, MINE);\n\t// RARITYが1以上のものをPROBABILITY_CHANGE_THRESHOLD(_0か_1のどちらかランダムの値)の値の回数連続で追加できた場合、KAKUHENをtrueにする。\n\tif (MINE.slice(\n\t\t\t-(shuffle([PROBABILITY_CHANGE_THRESHOLD_0, PROBABILITY_CHANGE_THRESHOLD_1])[0])\n\t\t).every(V=>V.RARITY >= 1)) {\n\t\tKAKUHEN = true;\n\t}\n\t// KAKUHEN時はRARITYが0のものを選択する確率が半分(50%。つまりRARITY0がSLOT3から一時的に90個から45個)になる。10回選択した後にKAKUHENをfalseにする。\n\tif (KAKUHEN === true) {\n\t\tKAKUHEN_COUNTER += 1;\n\t\tKAKUHEN = KAKUHEN_COUNTER >= KAKUHEN_COUNTER_LIMIT ? false : true;\n\t\tKAKUHEN_COUNTER = KAKUHEN_COUNTER >= KAKUHEN_COUNTER_LIMIT ? 0 : KAKUHEN_COUNTER;\n\t}\n};\n\n\n\n\n\n\n\n\nconst magic_USR_to_UNT = (Magic, Usr_Id) => {\n\ttry {\n\tconst magic_attack = convert_for_magic(Magic);\n\tmagic_attack.forEach(MAGI=>{\n\t\tconst magic_to_Y = CURRENT_Y_AND_X[Usr_Id][0] + MAGI[0];\n\t\tconst magic_to_X = CURRENT_Y_AND_X[Usr_Id][1] + MAGI[1];\n\t\tif(\n\t\t\t(typeof COLLECT_VALUE2[magic_to_Y]) === 'undefined' ||\n\t\t\t(typeof COLLECT_VALUE2[magic_to_Y][magic_to_X]) === 'undefined'\n\t\t){return};\n\t\treflect_USR_DATA();\n\t\tconsole.log(COLLECT_VALUE2[magic_to_Y][magic_to_X][2]);\n\t\tif(\n\t\t\tCOLLECT_VALUE2[magic_to_Y][magic_to_X][2] === 'GOL' ||\n\t\t\tCOLLECT_VALUE2[magic_to_Y][magic_to_X][2] === 'BLC' ||\n\t\t\tCOLLECT_VALUE2[magic_to_Y][magic_to_X][2] === 'NON' ||\n\t\t\tCOLLECT_VALUE2[magic_to_Y][magic_to_X][2] === 'USR'\n\t\t){return};\n\n\n\n\t\tconst UNT_NUM = Number(COLLECT_VALUE2[magic_to_Y][magic_to_X][2]['NAME'].replaceAll('UNT_', ''));\n\t\tconst UNT_NUM_N = 'UNT_NUM_' + (UNT_NUM).toString();\n\t\tconst USR_ATK_BUFF = USR_DATA_ARRAY[Usr_Id]['EQP'].reduce((accumulator, currentValue) => {\n\t\t\treturn accumulator + currentValue['ATK_BUFF'];\n\t\t}, 0) || 0;\n\t\tconst USR_ATK = USR_DATA_ARRAY[Usr_Id].ATK;\n\t\tconst USR_ATK_WITH_BUFF = USR_ATK + USR_ATK_BUFF;\n\t\tUNT_DATA_OBJ[UNT_NUM_N]['LFP'] -= USR_ATK_WITH_BUFF;\n\n\n\t\tif(\n\t\tCOLLECT_VALUE2[magic_to_Y][magic_to_X][3] === 'background-color: #00FF00'\n\t){\n\t\t\tdamage_effect({Y_X_Ary: [magic_to_Y, magic_to_X],\n\t\t\t\tms: 200,\n\t\t\t\t// Original_Color: '#00FF00',\n\t\t\t\tOriginal_Color: \n\t\t\t\tUNT_DATA_OBJ[UNT_NUM_N]['LFP'] <= 0 ?\n\t\t\t\t\t'#FFFFFF' :\n\t\t\t\t\t'#00FF00',\n\t\t\t\tColor_0: '#FF0000',\n\t\t\t\tColor_1: '#FFFFFF',\n\t\t\t});\n\t}\n\n\t\tif (UNT_DATA_OBJ[UNT_NUM_N]['LFP'] <= 0) {\n\t\t\tKILL_STREAK += 1;\n\t\t\t// GOLD += 1;\n\t\t\tGOLD += kill_streak_stack_get_more_gold({\n\t\t\t\tUnt_Gld: UNT_DATA_OBJ[UNT_NUM_N]['GLD'],\n\t\t\t\tKill_Streak: KILL_STREAK,\n\t\t\t});\n\t\t\t// console.log('FOO', FOO);\n\t\t\tconst UNT_Y_AND_X = \n\t\t\t\t\t[\n\t\t\t\t\t\tmagic_to_Y,\n\t\t\t\t\t\tmagic_to_X,\n\t\t\t\t\t];\n\t\t\t// UNTの位置をNONに変更する\n\t\t\tchange_BLC_to_NON(UNT_Y_AND_X[0], UNT_Y_AND_X[1]);\n\t\t\t// 色も更新する\n\t\t\tCOLLECT_VALUE2[UNT_Y_AND_X[0]][UNT_Y_AND_X[1]][3] = 'background-color: #FFFFFF';\n\t\t\t// UNT_DATA_OBJからUNT_NUMを指定してUNTを削除する\n\t\t\tUNT_DATA_OBJ = R.omit([UNT_NUM_N], UNT_DATA_OBJ);\n\t\t}\n\t})\n\t} catch (error) {\n\tconsole.log(error);\n\t}\n}\n\n\n\n// クリックした位置の上下左右の配列を取得する関数\nconst get_click_position = (Y, X, When_Click=false) => {\n\t// CURRENT_Y_AND_X = [Y, X];\n\tconst click_position = [\n\t\t[Y, X-1],\n\t\t[Y, X+1],\n\t\t[Y-1, X],\n\t\t[Y+1, X],\n\t];\n\tif(When_Click){\n\t\tconsole.log(\n\t\t\tY,\n\t\t\tX,\n\t\t\tclick_position,\n\t\t);\n\t}\n\treturn click_position;\n};\n\n// Y,XをBLCからゴール(GOL)に変更する関数\nconst change_BLC_to_GOL = (Y, X) => {\n\tCOLLECT_VALUE2[Y][X][2] = 'GOL';\n\t// 色は黄色にする\n\tCOLLECT_VALUE2[Y][X][3] = 'background-color: #FFFF00';\n};\n\n// USRからGOLまでを隣接して移動できるように適宜BLCをNONに変更する関数\nconst change_BLC_to_NON = (Y, X) => {\n\t// Y,XをBLCからNONに変更する\n\tCOLLECT_VALUE2[Y][X][2] = 'NON';\n\t// 色は白色にする\n\tCOLLECT_VALUE2[Y][X][3] = 'background-color: #FFFFFF';\n};\n\n\n// USRがUNTにアタックする関数(UNTのLFPをUSRのATK分減らす)(引数にはUNT_DATA_ARRAYのUNT_NUMを指定する)\n// const attack_USR_to_UNT = (UNT_NUM, Go_to_Y, Go_to_X) => {\nconst attack_USR_to_UNT = (Go_to_Y, Go_to_X, Usr_Id=0) => {\n\t// Go_to_YとGo_to_XにUNTが存在しない場合はreturnする\n\tif (COLLECT_VALUE2[Go_to_Y][Go_to_X][2] !== 'object'){\n\t\tif (COLLECT_VALUE2[Go_to_Y][Go_to_X][2]['TYPE'] !== 'UNT') {\n\t\t\t// UNTではない UNTが存在しない\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Go_to_YとGo_to_XからUNT_NUMを取得する\n\tconst UNT_NUM = Number(COLLECT_VALUE2[Go_to_Y][Go_to_X][2]['NAME'].replaceAll('UNT_',''));\n\tconst UNT_NUM_N = 'UNT_NUM_' + (UNT_NUM).toString();\n\t// USR_DATA_ARRAY[Usr_Id]の['EQP']の中から['ATK_BUFF']を累計してUSR_ATK_BUFFに代入すr\n\tconst USR_ATK_BUFF = USR_DATA_ARRAY[Usr_Id]['EQP'].reduce((accumulator, currentValue) => {\n\t\treturn accumulator + currentValue['ATK_BUFF'];\n\t}, 0) || 0;\n\t// USRのATKを取得する\n\tconst USR_ATK = USR_DATA_ARRAY[Usr_Id].ATK;\n\tconst USR_ATK_WITH_BUFF = USR_ATK + USR_ATK_BUFF;\n\t// 指定したUNTのLFPをUSRのATK分減らす\n\tdamage_alert({\n\t\tBefore_LFP: UNT_DATA_OBJ[UNT_NUM_N]['LFP'],\n\t\tAfter_LFP: UNT_DATA_OBJ[UNT_NUM_N]['LFP'] - USR_ATK_WITH_BUFF,\n\t\tDamage: USR_ATK_WITH_BUFF,\n\t});\n\tUNT_DATA_OBJ[UNT_NUM_N]['LFP'] -= USR_ATK_WITH_BUFF;\n\t// ダメージエフェクト\n\tdamage_effect({Y_X_Ary: [Go_to_Y, Go_to_X],\n\t\tms: 200,\n\t\tOriginal_Color: '#00FF00',\n\t\tColor_0: '#FF0000',\n\t\tColor_1: '#FFFFFF',\n\t});\n\n\t// 指定したUNTのLFPが0以下になったら、指定したUNTの位置をNONに変更する\n\tif (UNT_DATA_OBJ[UNT_NUM_N]['LFP'] <= 0) {\n\t\tKILL_STREAK += 1;\n\t\tGOLD += 1;\n\t\t// GOLD += kill_streak_stack_get_more_gold({\n\t\t// \tUnt_Gld: UNT_DATA_OBJ[UNT_NUM_N]['GLD'],\n\t\t// \tKill_Streak: KILL_STREAK,\n\t\t// });\n\t\tconst UNT_Y_AND_X = \n\t\t\t\t[\n\t\t\t\t\t// CURRENT_Y_AND_X[0] + Go_to_Y,\n\t\t\t\t\t// CURRENT_Y_AND_X[1] + Go_to_X,\n\t\t\t\t\tGo_to_Y,\n\t\t\t\t\tGo_to_X,\n\t\t\t\t];\n\t\t// UNTの位置をNONに変更する\n\t\tchange_BLC_to_NON(UNT_Y_AND_X[0], UNT_Y_AND_X[1]);\n\t\t// 色も更新する\n\t\tCOLLECT_VALUE2[UNT_Y_AND_X[0]][UNT_Y_AND_X[1]][3] = 'background-color: #FFFFFF';\n\t\t// UNT_DATA_OBJからUNT_NUMを指定してUNTを削除する\n\t\tUNT_DATA_OBJ = R.omit([UNT_NUM_N], UNT_DATA_OBJ);\n\t}\n};\n\n// UNTがUSRにアタックする関数(USRのLFPをUNTのATK分減らす)(引数にはUNT_DATA_ARRAYのUNT_NUMを指定する)\nconst attack_UNT_to_USR = (UNT_NUM, Usr_Id=0) => {\n\tdamage_effect({Y_X_Ary: [get_USR_position()[0], get_USR_position()[1]],\n\t\tms: 200,\n\t\tOriginal_Color: '#0000FF',\n\t\tColor_0: '#FF0000',\n\t\tColor_1: '#FFFFFF',\n\t});\n\tconst UNT_NUM_N = 'UNT_NUM_' + (UNT_NUM).toString();\n\tconst UNT_ATK = UNT_DATA_OBJ[UNT_NUM_N].ATK;\n\tdamage_alert({\n\t\tBefore_LFP: USR_DATA_ARRAY[Usr_Id].LFP,\n\t\tAfter_LFP: USR_DATA_ARRAY[Usr_Id].LFP - UNT_ATK,\n\t\tDamage: UNT_ATK,\n\t});\n\t// 指定したUNTのATKをUSRのLFP分減らす\n\tUSR_DATA_ARRAY[Usr_Id]['LFP'] -= UNT_ATK;\n\t// USRのLFPが0以下になったら、ゲームオーバーにする\n\tif (USR_DATA_ARRAY[Usr_Id].LFP <= 0) {\n\t\t\n\t\t// ゲームオーバーにする\n\t\tDIED = 'YOU DIED, GAME OVER';\n\t\tFLOOR = 0;\n\t\tPICKEL = 0;\n\t\tsetTimeout(() => {\n\t\t\t// reset_or_init_map({when_mounted_time: false});\n\t\t\treset_or_init_map({when_mounted_time: false, go_up: false, when_died: true});\n\t\t}, 1000);\n\t}\n};\n\n// 与えるダメージ表示する関数\nconst damage_alert = ({\n\tBefore_LFP=0,\n\tAfter_LFP=0,\n\tDamage=0\n}) =>{\n\tif(SHOW_DAMAGE !== 'ON'){return}\n\talert(\n\t\t\"Before_LFP: \" + (Before_LFP).toString() + ' ' +\n\t\t\"Damage: \" + (Damage).toString() + ' ' +\n\t\t\"After_LFP: \" + (After_LFP).toString() + ' '\n\t);\n}\n\n// LFPが減った時に対象のUSRかUNTの色を500ms点滅させる関数\nconst damage_effect = (\n\t{\n\t\tY_X_Ary=[9, 0],\n\t\tms=200,\n\t\tOriginal_Color='#0000FF',\n\t\tColor_0='#0000FF',\n\t\tColor_1='#FFFFFF',\n\t}\n\t) =>{\n\tconst [Y, X] = Y_X_Ary;\n\tconst function1 = () => {COLLECT_VALUE2[Y][X][3] = `background-color: ${Color_0}`};\n\tconst function2 = () => {COLLECT_VALUE2[Y][X][3] = `background-color: ${Color_1}`};\n\tconst function3 = () => {COLLECT_VALUE2[Y][X][3] = `background-color: ${Original_Color}`};\n\tconst color_blink = (ms, Color_0, Color_1) =>{\n\t\tconst limitSeconds = ms / 1000;\n\t\tconst startTime = new Date().getTime();\n\t\tlet count = 0;\n\t\tconst intervalId = setInterval(() => {\n\t\t\tconst currentTime = new Date().getTime();\n\t\t\tconst elapsedTime = (currentTime - startTime) / 1000;\n\n\t\t\telapsedTime >= limitSeconds ? clearInterval(intervalId) :\n\t\t\t\tcount++ % 2 === 0 ? function1() : function2();\n\t\t}, 10);\n\t};\n\tcolor_blink(ms, Color_0, Color_1);\n\t// タイマーをクリアして元の色に戻す\n\tsetTimeout(() => {\n\t\tfunction3();\n\t}, ms);\n};\n\n\n\n// USRはlifepoint(LFP)とattack(ATK)を持つ\n// LFPが0になるとゲームオーバー\n// USRの初期値は{NAME: 'USR', LFP: 5, ATK: 1};\n// MINEから指定したUSR_DATA_ARRAYのNAMEのEQPにオブジェクトを追加する関数。\n// オブジェクトの数はLIMITという引数の数が上限となる\n// UNTが移動する関数\n// ATKの値が高いUNTから順番に移動する\n// 移動先にUSRがいたらアタックする\n// 移動先がBLCもしくは他のUNTだったら移動しない\n// 移動先にGOLがいたら移動しない\nfunction click_or_keypress_event(\n\tevent,\n\tAlt_Param={\n\tKey: null,\n\tUsr_Id: null,\n\tMagic: null,\n\tEqp_I: null,\n\t}) {\n\n\t// キーボードで操作した場合はevent.keyが有る\n\t// 　　Alt_Paramは初期値の全てのプロパティがnullのオブジェクト\n\t// <button>で操作した場合はevent.keyが無い\n\t// 　　HTML側のclickの中でAlt_Paramの各プロパティがセットされる\n\n\tconst key = event ? event.key : Alt_Param['Key'];\n\tconst usr_id = Alt_Param['Usr_Id'] ? Alt_Param['Usr_Id'] : 0;\n\tconst magic = Alt_Param['Magic'];\n\tconst eqp_i = Alt_Param['Eqp_I'];\n\n\n\tconsole.log(\n'usr_id', usr_id,\n'magic', magic,\n'eqp_i', eqp_i,\n\t);\n\n\tKILL_STREAK = 0;\n\n\t// // Magic引数がある場合はmagic_attackとUNT_ATTACK_OR_MOVEを実行し、\n\t// usr_moveとattack_USR_to_UNTを実行せず、早期リターンする\n\tif(magic){\n\t\tdecrement_MAGIC_COUNTER(eqp_i, usr_id);\n\t\tmagic_USR_to_UNT(magic[1], usr_id);\t\t\n\t\tchange_CURRENT_USR_ID();\n\t\t//  Object.entries(UNT_DATA_OBJ).map((V,I)=>{UNT_ATTACK_OR_MOVE(V[1]['NAME'])});\n\t\t// UNIT_TURNがtrueなら各UNTの行動を実行する\n\t\tif(UNIT_TURN === true){\n\t\t\tObject.entries(UNT_DATA_OBJ).map((V,I)=>{UNT_ATTACK_OR_MOVE(V[1]['NAME'])});\n\t\t\tUNIT_TURN = false;\n\t\t};\n\t\treturn;\n\t}\n\n\tconst go_to_y_x_setup = (Key, Usr_Id) => {\n\t\tconst keypress_position = {\n\t\t\t'w': [-1, 0],\n\t\t\t'a': [0, -1],\n\t\t\t's': [1, 0],\n\t\t\t'd': [0, 1],\n\t\t\t'm': null, // Magic of m\n\t\t};\n\t\tconst offset_y = keypress_position[Key][0];\n\t\tconst offset_x = keypress_position[Key][1];\n\t\tconst result_go_to_y_x = [\n\t\t\tCURRENT_Y_AND_X[Usr_Id][0] + offset_y,\n\t\t\tCURRENT_Y_AND_X[Usr_Id][1] + offset_x,\n\t\t];\n\t\treflect_USR_DATA();\n\t\treturn result_go_to_y_x;\n\t}\n\tconst go_to_y_x = go_to_y_x_setup(key, usr_id);\n\t// go_to_y_xがBLCの場合はPICKELを1増やして、BLCをNONに変更する\n\tif (COLLECT_VALUE2[go_to_y_x[0]][go_to_y_x[1]][2] === 'BLC') {\n\t\tPICKEL += 1;\n\t\tchange_BLC_to_NON(go_to_y_x[0], go_to_y_x[1]);\n\t}\n\t// go_to_y_xがUSRの場合は更新しない、早期リターンする処理\n\tif (COLLECT_VALUE2[go_to_y_x[0]][go_to_y_x[1]][2] === 'USR') {\n\t\treturn;\n\t}\n\t// go_to_y_xがGOLの場合はGOALをtrueにする\n\tif (COLLECT_VALUE2[go_to_y_x[0]][go_to_y_x[1]][2] === 'GOL') {\n\t\tGOAL = true;\n\t\tMINE = [];\n\n\t\t// GOAL後の硬直を無くしてみる(setTimeoutがバグの温床になる気配があるから削除していく方針)\n\t\t\t// 別の方法でGOALしたことをプレイヤーに伝える\n\t\t// document.removeEventListener('keypress', click_or_keypress_event);\n\t\t\t\t\t\t\t\t// 1秒後にreset_mapを実行する\n\t\t\t\t\t\t\t\t// setTimeout(() => {\n\t\treset_or_init_map({when_mounted_time: false, go_up: true, when_died: false});\n\t\t\t\t\t\t\t\t// }, 1000);\n\t}\n\n\tif(!magic){\n\t\tconst usr_move = () => {\n\t\t\treflect_USR_DATA();\n\t\t\t// go_to_y_xがNONの場合は更新する\n\t\t\tif (COLLECT_VALUE2[go_to_y_x[0]][go_to_y_x[1]][2] === 'NON') {\n\t\t\t\tCOLLECT_VALUE2[go_to_y_x[0]][go_to_y_x[1]][2] = 'USR';\n\t\t\t\tCOLLECT_VALUE2[CURRENT_Y_AND_X[usr_id][0]][CURRENT_Y_AND_X[usr_id][1]][2] = 'NON';\n\t\t\t\t// 色も更新する\n\t\t\t\tCOLLECT_VALUE2[go_to_y_x[0]][go_to_y_x[1]][3] = 'background-color: #0000FF';\n\t\t\t\tCOLLECT_VALUE2[CURRENT_Y_AND_X[usr_id][0]][CURRENT_Y_AND_X[usr_id][1]][3] = 'background-color: #FFFFFF';\n\t\t\t\tCURRENT_Y_AND_X[usr_id] = go_to_y_x;\n\t\t\t}\n\t\t\treflect_USR_DATA();\n\t\t}\n\t\tusr_move();\n\t\t// USRがUNTにアタックする。引数はUNT_DATA_ARRAYのUNT_NUMの指定と攻撃対象のUNTのIDの指定。\n\t\tattack_USR_to_UNT(go_to_y_x[0], go_to_y_x[1]);\n\t\tchange_CURRENT_USR_ID();\n\t}\n\n\n\t//  Object.entries(UNT_DATA_OBJ).map((V,I)=>{UNT_ATTACK_OR_MOVE(V[1]['NAME'])});\n\t// UNIT_TURNがtrueなら各UNTの行動を実行する\n\tif(UNIT_TURN === true){\n\t\tObject.entries(UNT_DATA_OBJ).map((V,I)=>{UNT_ATTACK_OR_MOVE(V[1]['NAME'])});\n\t\tUNIT_TURN = false;\n\t};\n\n};\n\n\n// 現在のUSRの位置を取得する関数\nconst get_USR_position = () => {\n\t// UNTの位置を取得する\n\treflect_USR_DATA();\n\tconst USR_Y_AND_X = COLLECT_VALUE2\n\t\t.map(V=>V.filter(V2=>V2[2] === 'USR' ))\n\t\t.filter(V=>V.length>0)\n\t\t[0][0];\n\treturn USR_Y_AND_X;\n};\n\nlet tmp = null;\n// 指定したUNTの位置を取得する関数\nconst get_UNT_position = (UNT_NUM=0) => {\n\ttry {\n\t// https://stackoverflow.com/questions/38968598/what-happened-inside-of-1-tostring-and-1-tostring-in-javascript\n\tconst UNT_NUM_STR = (UNT_NUM).toString();\n\tconst UNT_NUM_N = 'UNT_NUM_' + (UNT_NUM).toString();\n\t// UNTの位置を取得する\n\t// filterで['TYPE']がUNTかつ['NAME']がUNT_0等のものを抽出する\n\tconst NUMBER_STR_AND_YX = COLLECT_VALUE2.map((V1, I1)=>V1.map((V2, I2)=>{\n    \treturn typeof V2[2] === 'object' ?\n\t\t\t[V2[2]['NAME'].replaceAll('UNT_',''),[I1, I2]] :\n\t\t\tnull;\n\t})).flat().filter(V=>V!==null);\ntmp = NUMBER_STR_AND_YX;\n\n\tconst res1 = NUMBER_STR_AND_YX.filter(V=>V[0]===UNT_NUM_STR)[0][1];\n\tconst [Y, X] = res1;\n\treturn [Y, X];\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\n// key_press関数を実行した後に、UNTの行動を実行する関数。\n// 隣接しているUSRがいたらアタックする\n// USRが隣接していない場合はランダムに1マス移動する\n// UNTの移動順はATKの値が高いUNTから順番に行動する。ATKが同値の場合はUNT_NUMが小さい方から行動する。\nconst UNT_ATTACK_OR_MOVE = (NAME) => {\n\ttry {\n\tconst UNT_NUM = NAME ? Number(NAME.replaceAll('UNT_', '')) : 0;\n\tconst usr_position = get_USR_position();\n\tconst unt_position = get_UNT_position(UNT_NUM);\n\n\t// 隣接しているマスにUSRがいたらアタックする\n\tif (\n\t\t// 上下左右にUSRがいる場合はアタックする\n\t\t( (unt_position[1] === usr_position[1]) && (unt_position[0] === usr_position[0] - 1) ) ||\n\t\t( (unt_position[1] === usr_position[1]) && (unt_position[0] === usr_position[0] + 1) ) ||\n\t\t( (unt_position[0] === usr_position[0]) && (unt_position[0] === usr_position[1] - 1) ) ||\n\t\t( (unt_position[0] === usr_position[0]) && (unt_position[0] === usr_position[1] + 1) )\n\t){\n\t\tattack_UNT_to_USR(UNT_NUM);\n\t\treturn;\n\t}\n\n\tconst UNT_ADJACENT_Y_AND_X = get_click_position(unt_position[0], unt_position[1], false);\n\t// 隣接しているマスにUNTがいたらbreedする\n\tif(\n\t\t// 上下左右にUNTがいる場合はbreedする\n\t\t// true\n\t\t// window.app.$capture_state().COLLECT_VALUE2[0][3][2]['TYPE']\n\t\tUNT_ADJACENT_Y_AND_X.some(V=>COLLECT_VALUE2[V[0]][V[1]][2]['TYPE'] === 'UNT')\n\t){\n\t\t\n\t\t// get_click_position();\n\t\t// console.log(unt_position);\n\t\t// console.log('in breed');\n\t\tconst target_unit_num_ary = UNT_ADJACENT_Y_AND_X\n\t\t\t.filter(V=>COLLECT_VALUE2[V[0]][V[1]][2]['TYPE'] === 'UNT')\n\t\t\t.map(V=>COLLECT_VALUE2[V[0]][V[1]][2]['NAME'].replaceAll('UNT_', ''))\n\t\t\t.map(V=>Number(V));\n\t\t\t// .sort((a, b) => a - b)[0];\n\t\tbreed(UNT_NUM, target_unit_num_ary);\n\t\t// console.log(Number(target_unit_num_ary));\n\t\t// console.log(UNT_NUM);\n\t\t// breed(UNT_NUM);\n\t\t// return;\n\t}\n\n\n\t// 隣接しているマスにUSRがいない場合はランダムに1マス移動する\n\t// NONのマスには移動できる。BLCのマスには移動できない。GOLのマスには移動できない。\n\n\t// 移動先のマスをランダムに選択する\n\tconst random_move = Math.floor(Math.random() * 4);\n\t// 移動先のマスを決定する\n\tconst move_position = [\n\t\t[unt_position[0], unt_position[1] - 1],\n\t\t[unt_position[0], unt_position[1] + 1],\n\t\t[unt_position[0] - 1, unt_position[1]],\n\t\t[unt_position[0] + 1, unt_position[1]],\n\t];\n\t// 移動先のマスがNONの場合は移動する\n\tlet shuffled_move_position = shuffle(move_position);\n\tfor(let i=0; i<shuffled_move_position.length; i++){\n\t\tlet Move_to = shuffled_move_position[i];\n\t\t// Move_toがNONの場合は移動し、早期リターンする\n\t\tif (COLLECT_VALUE2[Move_to[0]][Move_to[1]][2] === 'NON') {\n\t\t\t// UNTの位置をNONに変更する\n\t\t\tchange_BLC_to_NON(unt_position[0], unt_position[1]);\n\t\t\t// 色も更新する\n\t\t\tCOLLECT_VALUE2[unt_position[0]][unt_position[1]][3] = 'background-color: #FFFFFF';\n\t\t\t// UNTの位置を更新する\n\t\t\tCOLLECT_VALUE2[Move_to[0]][Move_to[1]][2] = UNT_DATA_OBJ['UNT_NUM_' + UNT_NUM];\n\t\t\t// 色も更新する\n\t\t\tCOLLECT_VALUE2[Move_to[0]][Move_to[1]][3] = 'background-color: #00FF00';\n\t\t\t// 早期リターンする\n\t\t\tshuffled_move_position = [];\n\t\t}\n\t}\n\t} catch (error) {\n\t\t// console.log(error);\n\t}\n};\n\n\n\t\n\n\n// Y,Xの指定をランダムにする\nconst random_BLC_Y_AND_X = () => {\n\t// const random_Y = Math.floor(Math.random() * 10);\n\t// const random_X = Math.floor(Math.random() * 10);\n\tconst random_Y = shuffle([0,1,2,3,4,5,6,7,8,9])[0];\n\tconst random_X = shuffle([0,1,2,3,4,5,6,7,8,9])[0];\n\treturn [random_Y, random_X];\n};\n// BLCの任意の分量(パーセント)をNONに変更する関数\nconst change_percent_BLC_to_NON = (Percent=80) => {\n\t// BLCの総量を取得する\n\tconst BLC_count = COLLECT_VALUE2\n\t\t.map(V=>V.filter(V2=>V2[2]==='BLC'))\n\t\t.flat()\n\t\t.length;\n\t// BLC_countからPercentの分量を算出する\n\tconst BLC_count_percent = Math.floor(BLC_count * (Percent / 100));\n\t// BLCの半数をNONに変更する\n\tfor (let i = 0; i < BLC_count_percent; i++) {\n\t\tconst random_Y_AND_X = random_BLC_Y_AND_X();\n\t\treflect_USR_DATA();\n\t\t// USRがある位置はNONに変更せずスキップする\n\t\tif (COLLECT_VALUE2[random_Y_AND_X[0]][random_Y_AND_X[1]][2] === 'USR') {\n\t\t\tcontinue;\n\t\t}\n\t\t// GOLがある位置はNONに変更せずスキップする\n\t\tif (COLLECT_VALUE2[random_Y_AND_X[0]][random_Y_AND_X[1]][2] === 'GOL') {\n\t\t\tcontinue;\n\t\t}\n\t\tchange_BLC_to_NON(random_Y_AND_X[0], random_Y_AND_X[1]);\n\t}\n};\n\n// 全てのUNTをNONに配置する関数\nconst change_UNT_to_NON = () => {\n\t// 'NON'のブロックを列挙する関数\n\tconst get_NON_Y_AND_X = () => {\n\t\tconst NON_Y_AND_X = COLLECT_VALUE2\n\t\t\t.map(V=>V.filter(V2=>V2[2]==='NON'))\n\t\t\t.flat()\n\t\t\t.map(V=>V.slice(0, 2));\n\t\treturn NON_Y_AND_X;\n\t};\n\n\tconst set_UNT = () =>{\n\t\tlet all_NON = get_NON_Y_AND_X();\n\t\t// 以下のようにUNTを配置する\n\t\tObject.entries(UNT_DATA_OBJ).forEach((V, I) => {\n\t\t\tconst UNT_NUM_N = 'UNT_NUM_' + (I).toString();\n\t\t\tconst random_Y_AND_X = shuffle(all_NON)[0];\n\n// random_Y_AND_Xをall_NONから削除する\n\tall_NON = all_NON.filter(V=>V!==random_Y_AND_X);\n\t\t\t\tCOLLECT_VALUE2[random_Y_AND_X[0]][random_Y_AND_X[1]][2] = UNT_DATA_OBJ[UNT_NUM_N];\n\t\t\t\tCOLLECT_VALUE2[random_Y_AND_X[0]][random_Y_AND_X[1]][3] = 'background-color: #00FF00';\n\t\t\t});\n\t}\n\tset_UNT();\n};\n\nconst get_all_USR_ID = () => USR_DATA_ARRAY.map((V, I) => V['ID']);\n// マップを初期化してやり直す関数\n// 起動時にも実行する\nconst reset_or_init_map = ({when_mounted_time=true, go_up=false, when_died=false}) => {\n\t// when_mounted_timeがfalseの時はconfirmでagainを表示する\n\t// againでない場合は早期リターンして、以降の処理はしない\n\t// if(when_mounted_time === false){\n\t// \treset_or_init_map({when_mounted_time: true, go_up: false});\n\t// }\n\n\t// COLLECT_VALUE2を初期化する\n\tCOLLECT_VALUE2 = R.xprod(R.range(0, 10), R.range(0, 10))\n\t\t.map(V=>V.concat(['BLC']))\n\t\t.map(V=>V.concat(['background-color: #808080']));\n\tCOLLECT_VALUE2 = R.splitEvery(10, COLLECT_VALUE2);\n\n\tset_USR_to_init_position();\n\n\t// USRのスポーン位置にUSR_DATA_ARRAYを反映する\n\t// reflection_USR_DATA_ARRAY();\n\n\tDIED = '';\n\tif(when_mounted_time === false, go_up === false, when_died === true){\n\n\t\tget_all_USR_ID().forEach(Usr_Id=> recharge_magic_count(Usr_Id));\n\nretry_data_setup();\nGOLD = USR_DATA_ARRAY[0]['GOLD'];\n\n\n\t};\n\tUNT_DATA_OBJ = {\n\t\tUNT_NUM_0: {TYPE: 'UNT', NAME: 'UNT_0', LFP: 3, ATK: 1, BDP: 0, RBP: 0},\n\t\tUNT_NUM_1: {TYPE: 'UNT', NAME: 'UNT_1', LFP: 2, ATK: 2, BDP: 0, RBP: 0},\n\t\tUNT_NUM_2: {TYPE: 'UNT', NAME: 'UNT_2', LFP: 2, ATK: 3, BDP: 0, RBP: 0},\n\t\tUNT_NUM_3: {TYPE: 'UNT', NAME: 'UNT_3', LFP: 2, ATK: 4, BDP: 0, RBP: 0},\n\t\tUNT_NUM_4: {TYPE: 'UNT', NAME: 'UNT_4', LFP: 4, ATK: 1, BDP: 0, RBP: 0},\n\t\tUNT_NUM_5: {TYPE: 'UNT', NAME: 'UNT_5', LFP: 4, ATK: 2, BDP: 0, RBP: 0},\n\t\tUNT_NUM_6: {TYPE: 'UNT', NAME: 'UNT_6', LFP: 5, ATK: 1, BDP: 0, RBP: 0},\n\t\tUNT_NUM_7: {TYPE: 'UNT', NAME: 'UNT_7', LFP: 5, ATK: 2, BDP: 0, RBP: 0},\n\t\tUNT_NUM_8: {TYPE: 'UNT', NAME: 'UNT_8', LFP: 5, ATK: 3, BDP: 0, RBP: 0},\n\t\tUNT_NUM_9: {TYPE: 'UNT', NAME: 'UNT_9', LFP: 5, ATK: 4, BDP: 0, RBP: 0},\n\t\tUNT_NUM_10: {TYPE: 'UNT', NAME: 'UNT_10', LFP: 6, ATK: 1, BDP: 0, RBP: 0},\n\t\tUNT_NUM_11: {TYPE: 'UNT', NAME: 'UNT_11', LFP: 6, ATK: 2, BDP: 0, RBP: 0},\n\t\tUNT_NUM_12: {TYPE: 'UNT', NAME: 'UNT_12', LFP: 6, ATK: 3, BDP: 0, RBP: 0},\n\t\tUNT_NUM_13: {TYPE: 'UNT', NAME: 'UNT_13', LFP: 6, ATK: 4, BDP: 0, RBP: 0},\n\t\tUNT_NUM_14: {TYPE: 'UNT', NAME: 'UNT_14', LFP: 1, ATK: 1, BDP: 0, RBP: 0},\n\t\tUNT_NUM_15: {TYPE: 'UNT', NAME: 'UNT_15', LFP: 1, ATK: 2, BDP: 0, RBP: 0},\n\t\tUNT_NUM_16: {TYPE: 'UNT', NAME: 'UNT_16', LFP: 1, ATK: 3, BDP: 0, RBP: 0},\n\t};\n\tUNT_DATA_OBJ = {};\n\tlet UNT_DATA_CONF = {};\n\tif(go_up===true){\n\t\tget_all_USR_ID().forEach(Usr_Id=> recharge_magic_count(Usr_Id));\n\t\tswitch_field_gacha();\n\t\tget_all_USR_ID().forEach(Usr_Id=> USR_DATA_ARRAY[Usr_Id]['LFP'] += LFP_RECHARGE_NUM );\n\t\t\n\t\tFLOOR += 1;\n\t\tconst FLOOR_plus_one = () => FLOOR + 1;\n\t\tconst Table_Id = 0;\n\t\tconst LFP_Range_Array_Min = FLOOR_plus_one() * LFP_ATK_Range_Array_Min_Max_Table[Table_Id]['LFP_Min'];\n\t\tconst LFP_Range_Array_Max = FLOOR_plus_one() * LFP_ATK_Range_Array_Min_Max_Table[Table_Id]['LFP_Max'];\n\t\tconst ATK_Range_Array_Min = FLOOR_plus_one() * LFP_ATK_Range_Array_Min_Max_Table[Table_Id]['ATK_Min'];\n\t\tconst ATK_Range_Array_Max = FLOOR_plus_one() * LFP_ATK_Range_Array_Min_Max_Table[Table_Id]['ATK_Max'];\n\t\tconsole.log(ATK_Range_Array_Max);\n\t\tUNT_DATA_CONF = {\n\t\t\tRepeat_Array_Num: 1,\n\t\t\tRepeat_Array_Times: 20,\n\t\t\tLFP_Range_Array: [LFP_Range_Array_Min, LFP_Range_Array_Max],\n\t\t\tATK_Range_Array: [ATK_Range_Array_Min, ATK_Range_Array_Max],\n\t\t}\n\t}\n\tUNT_DATA_OBJ = make_UNT_DATA_OBJ(UNT_DATA_CONF);\n\n\t// GOALを初期位置に戻す\n\tchange_BLC_to_GOL(0, 9);\n\n\t// PICKELを初期化する\n\tPICKEL = 0;\n\t// GOALをfalseにする\n\tGOAL = false;\n\t// ADJACENT_Y_AND_Xを初期化する\n\tADJACENT_Y_AND_X = [];\n\t// CURRENT_Y_AND_Xを初期化する\n\tCURRENT_Y_AND_X = clone_START_CURRENT_Y_AND_X_ARRAY();\n\t// BLCを30%をNONに変更する\n\tchange_percent_BLC_to_NON();\n\n\t// バトルシステムの開発のために、初期位置の前後左右をNONに変更する\n\tCOLLECT_VALUE2[5][4][2] = 'NON'; COLLECT_VALUE2[5][4][3] = 'background-color: #FFFFFF';\n\tCOLLECT_VALUE2[5][6][2] = 'NON'; COLLECT_VALUE2[5][6][3] = 'background-color: #FFFFFF';\n\tCOLLECT_VALUE2[4][5][2] = 'NON'; COLLECT_VALUE2[4][5][3] = 'background-color: #FFFFFF';\n\tCOLLECT_VALUE2[6][5][2] = 'NON'; COLLECT_VALUE2[6][5][3] = 'background-color: #FFFFFF';\n\n\tCOLLECT_VALUE2[5][3][2] = 'NON'; COLLECT_VALUE2[5][3][3] = 'background-color: #FFFFFF';\n\tCOLLECT_VALUE2[5][7][2] = 'NON'; COLLECT_VALUE2[5][7][3] = 'background-color: #FFFFFF';\n\tCOLLECT_VALUE2[3][5][2] = 'NON'; COLLECT_VALUE2[3][5][3] = 'background-color: #FFFFFF';\n\tCOLLECT_VALUE2[7][5][2] = 'NON'; COLLECT_VALUE2[7][5][3] = 'background-color: #FFFFFF';\n\n\tchange_UNT_to_NON();\n\t\n\tdocument.addEventListener('keypress', ()=>click_or_keypress_event(\n\t\tevent,\n\t\t{\n\t\t\tKey: null,\n\t\t\tUsr_Id: CURRENT_USER_ID,\n\t\t\tMagic: null,\n\t\t\tEqp_I: null,\n\t\t}\n\t));\n};\n\nonMount(async () => {\n\ttry {\n\t\treset_or_init_map({when_mounted_time: true, go_up: false, when_died: false});\n\t} catch (error) {\n\t\tconsole.log(error);\t\t\n\t}\n});\n</script>\n\n\n<div class=\"container\" bind:this={rootElement}>\n\n<!-- fieldfieldfieldfieldfieldfield -->\n<div class=\"field\">\n\n<div class=\"INDEX_1\">\n\t<ul class=\"FLD\">\n\t\t<!-- 上記のobjを#eachでレンダリングする -->\n\t\t{#each COLLECT_VALUE2 as item, Y}\n\t\t\t<li class=\"CELL1\">\n\t\t\t\t{#each item as item2, X}\n\t\t\t\t\t<span class=\"CELL2\" style={item2[3]} on:keydown={()=>get_click_position(Y, X, true)} on:click={()=>get_click_position(Y, X, true)}>□</span>\n\t\t\t\t{/each}\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</div>\n\n<div class=\"INDEX_2\">\n\t<!-- 上下左右のボタン(WASDに対応する) -->\n\t<div>\n\t<button class='WASD_NULL'>◾️</button>\n\t<button on:click={() => click_or_keypress_event(null, \n\t{\n\tKey: 'w',\n\tUsr_Id: CURRENT_USER_ID,\n\tMagic: null,\n\tEqp_I: null,\n\t}\n\t)} class='WASD'>W</button>\n\t<button class='WASD_NULL'>◾️</button>\n\t</div>\n\t<div>\n\t<button on:click={() => click_or_keypress_event(null,\n\t{\n\tKey: 'a',\n\tUsr_Id: CURRENT_USER_ID,\n\tMagic: null,\n\tEqp_I: null,\n\t}\n\t)} class='WASD'>A</button>\n\t<button class='WASD_NULL'>◾️</button>\n\t<button on:click={() => click_or_keypress_event(null,\n\t{\n\tKey: 'd',\n\tUsr_Id: CURRENT_USER_ID,\n\tMagic: null,\n\tEqp_I: null,\n\t}\n\t)} class='WASD'>D</button>\n\t</div>\n\t<div>\n\t<button class='WASD_NULL'>◾️</button>\n\t<button on:click={() => click_or_keypress_event(null,\n\t{\n\tKey: 's',\n\tUsr_Id: CURRENT_USER_ID,\n\tMagic: null,\n\tEqp_I: null,\n\t}\n\t)} class='WASD'>S</button>\n\t<button class='WASD_NULL'>◾️</button>\n\t</div>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- ERROR_MESSAGEを表示するdivタグ。クリックしたら非表示になる -->\n<!-- <div> -->\n\t<!-- {#if ERROR_MESSAGE} -->\n\t\t<!-- <button on:click={remove_error_message}>remove_error_message</button> -->\n\t<!-- {/if} -->\n<!-- </div> -->\n\n<!-- GOALがtrueの場合はGOALと表示する -->\n{#if GOAL}\n\t<div>\n\t\tGOAL\n\t</div>\n{/if}\n<!-- DIEDがtruthyの場合はDIEDと表示する -->\n{#if DIED}\n\t<div>\n\t\t{DIED}\n\t</div>\n{/if}\n\n<!-- SHOW_ALERTをON/OFFできるラジオ -->\n<div>\n\t<fieldset>\n\t<span>SHOW_DAMAGE:</span>\n\t<span>\n\t\t<input type=\"radio\" id=\"ON\" name=\"SHOW_DAMAGE\" value=\"ON\" bind:group={SHOW_DAMAGE} />\n\t\t<label for=\"ON\">ON</label>\n\t</span>\n\t<span>\n\t\t<input type=\"radio\" id=\"OFF\" name=\"SHOW_DAMAGE\" value=\"OFF\" bind:group={SHOW_DAMAGE} />\n\t\t<label for=\"OFF\">OFF</label>\n\t</span>\n\t</fieldset>\n</div>\n\n{#if GOLD}\n<div>\nGOLD: {GOLD}\n</div>\n{/if}\n\n<!-- FLOORを表示するdivタグ -->\n<div>\n\tFLOOR: {FLOOR}\n</div>\n\n<!-- PICKELを表示するdivタグ -->\n<div>\n\tPICKEL: {PICKEL}\n</div>\n\n<div>\n\tKILL_STREAK: {KILL_STREAK}\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\t<!-- switch_field_gachaボタン -->\n\t\t\t\t\t\t\t<!-- <button on:click={switch_field_gacha}>switch_field_gacha</button> -->\n{#each USR_DATA_ARRAY as USR_DATA, EQP_I}\n<div class=\"USR_DATA_span\">\n\t{USR_DATA.NAME}\n\tLFP: {USR_DATA.LFP}\n\tATK: {USR_DATA.ATK}\n\t{#each USR_DATA.EQP as EQP, EQP_I}\n\t<div>\n\t\tRARITY: {EQP.RARITY}\n\t\tLFP_BUFF: {EQP.LFP_BUFF}\n\t\tATK_BUFF: {EQP.ATK_BUFF}\n\t\t{#if EQP}\n\t\t<div>\n\t\t\t<!-- {EQP_I} -->\n\t\t\tRARITY: {EQP.RARITY}\n\t\t\tLFP_BUFF: {EQP.LFP_BUFF}\n\t\t\t<!-- LFP_DEBUFF: {EQP.LFP_DEBUFF} -->\n\t\t\tATK_BUFF: {EQP.ATK_BUFF}\n\t\t\t<!-- ATK_DEBUFF: {EQP.ATK_DEBUFF} -->\n\t\t\t<!-- EQP.MAGIC[0]['MAGIC_COUNT']が0以下の場合下記ブロックを非表示にする -->\n\t\t\t<div>\n\t\t\t\t{#if EQP.MAGIC[0]['MAGIC_COUNT'] >= 1}\n\t\t\t\t<button on:click={() => click_or_keypress_event(\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\tMagic: EQP.MAGIC,\n\t\t\t\t\tEqp_I: EQP_I,\n\t\t\t\t\t// Usr_Id: CURRENT_USER_ID,\n\t\t\t\t\tUsr_Id: USR_DATA['ID'],\n\t\t\t\t\t},\n\t\t\t\t\t)}>\n\t\t\t\tMAGIC\n\t\t\t\t</button>\n\t\t\t\tMAGIC_COUNT: {EQP.MAGIC[0]['MAGIC_COUNT']}\n\t\t\t\t<!-- MAGIC_RANGE: {EQP.MAGIC[1]} -->\n\t\t\t\t\t{#each EQP.MAGIC[1] as MAGIC_1, MAGIC_1_I}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{MAGIC_1}\n\t\t\t\t\t</div>\n\t\t\t\t\t{/each}\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t\t{/if}\n\t</div>\n\t{/each}\n</div>\n{/each}\n\n\n\t<div>\n\t\t{#each Object.keys(UNT_DATA_OBJ) as key, IDX}\n\t\t\t<div id={UNT_DATA_OBJ[key].NAME} style='background-color: #FFFFFF'  class='UNT_BACK'>\n\t\t\t{UNT_DATA_OBJ[key].NAME}\n\t\t\tLFP: {UNT_DATA_OBJ[key].LFP}\n\t\t\tATK: {UNT_DATA_OBJ[key].ATK}\n\t\t\tGLD: {UNT_DATA_OBJ[key].GLD}\n\t\t\tBDP: {UNT_DATA_OBJ[key].BDP}\n\t\t\tRBP: {UNT_DATA_OBJ[key].RBP}\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n\n\t<div>Ver 0.0.2.9</div>\n\t<a href=\"https://github.com/taroyanaka/game/\">GitHub</a>\n\n</div>\n<!-- fieldfieldfieldfieldfieldfield -->\n\n\n\n\n\n<!-- gachagachagachagachagachagacha -->\n<div class=\"gacha\">\t\t\t\t\t\n\t\t<div>\n\t\t{#each USR_DATA_ARRAY as USR_DATA, USR_DATA_I}\n\t\t<div class=\"USR_DATA_span\">\n\t\t\t{USR_DATA['NAME']}\n\t\t\tLFP: {USR_DATA['LFP']}\n\t\t\tATK: {USR_DATA['ATK']}\n\t\t\t{#each USR_DATA['EQP'] as EQP, EQP_I}\n\t\t\t\t{#if EQP}\n\t\t\t\t<div>\n\t\t\t\t\t<!-- {EQP_I} -->\n\t\t\t\t\tRARITY: {EQP.RARITY}\n\t\t\t\t\tLFP_BUFF: {EQP.LFP_BUFF}\n\t\t\t\t\t<!-- LFP_DEBUFF: {EQP.LFP_DEBUFF} -->\n\t\t\t\t\tATK_BUFF: {EQP.ATK_BUFF}\n\t\t\t\t\t<!-- ATK_DEBUFF: {EQP.ATK_DEBUFF} -->\n\t\t\t\t\t\t<!-- EQP.MAGIC[0]['MAGIC_COUNT']が0以下の場合下記ブロックを非表示にする -->\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button on:click={() => UN_EQP(EQP_I, 0)}>UN_EQP</button>\n\t\t\t\t\t\t\tMAGIC_COUNT: {EQP.MAGIC[0]['MAGIC_COUNT']}\n\t\t\t\t\t\t\t{#each EQP.MAGIC[1] as MAGIC_1, MAGIC_1_I}\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{MAGIC_1}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t</div>\n\t\t{/each}\n\t\t</div>\n\n\t\t<button on:click={() => slot_exe_once({Rate_Param: 1})}>slot_exe_once</button>\n\t\t<button on:click={() => slot_exe_once({Rate_Param: 4})}>x4_slot_exe_once</button>\n\t\t<button on:click={() => slot_exe_once({Rate_Param: 8})}>x8_slot_exe_once</button>\n\t\t<button on:click={next_field}>next_field</button>\n\t\t<div>MINE</div>\n\t\tGOLD: {GOLD}\n\t\tKAKUHEN: {KAKUHEN}\n\t\tKAKUHEN_COUNTER: {KAKUHEN_COUNTER}\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<span class=\"EQP_SPAN\">RARITY</span>\n\t\t\t\t<span class=\"EQP_SPAN\">LFP_BUFF</span>\n\t\t\t\t<span class=\"EQP_SPAN\">LFP_DEBUFF</span>\n\t\t\t\t<span class=\"EQP_SPAN\">ATK_BUFF</span>\n\t\t\t\t<span class=\"EQP_SPAN\">ATK_DEBUFF</span>\n\t\t\t\t<span class=\"EQP_SPAN\">MAGIC</span>\n\t\t\t\t<span class=\"EQP_SPAN\">MAGIC_RANGE</span>\n\t\t\t</li>\n\t\t\t{#each MINE as EQP, EQP_I}\n\t\t\t<li>\n\t\t\t\t{#if EQP}\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['RARITY']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['LFP_BUFF']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['LFP_DEBUFF']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['ATK_BUFF']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['ATK_DEBUFF']}</span>\n\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['MAGIC'][0]['MAGIC_COUNT']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['MAGIC'][1]}</span>\n\t\t\t\t\t\n\t\t\t\t\t{#each USR_DATA_ARRAY as USR_DATA, USR_DATA_I}\n\t\t\t\t\t\t<!-- set_EQPボタン -->\n\t\t\t\t\t\t<!-- NAME, EQP, LIMITが引数 -->\n\t\t\t\t\t\t<button on:click={() => set_EQP({\n\t\t\t\t\t\t\tEqp: EQP,\n\t\t\t\t\t\t\t// Eqp_Limit: 5,\n\t\t\t\t\t\t\tEqp_Index: EQP_I,\n\t\t\t\t\t\t\t// Usr_Id: 0,\n\t\t\t\t\t\t\t// Usr_Id: CURRENT_USER_ID,\n\t\t\t\t\t\t\tUsr_Id: USR_DATA_I,\n\t\t\t\t\t\t})}>set:{USR_DATA_I}</button>\n\t\t\t\t\t{/each}\n\t\t\t\t{/if}\n\t\t\t</li>\n\t\t\t{/each}\n\t\t</ul>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<span class=\"EQP_SPAN\">RARITY</span>\n\t\t\t\t<span class=\"EQP_SPAN\">LFP_BUFF</span>\n\t\t\t\t<span class=\"EQP_SPAN\">LFP_DEBUFF</span>\n\t\t\t\t<span class=\"EQP_SPAN\">ATK_BUFF</span>\n\t\t\t\t<span class=\"EQP_SPAN\">ATK_DEBUFF</span>\n\t\t\t\t<span class=\"EQP_SPAN\">MAGIC</span>\n\t\t\t\t<span class=\"EQP_SPAN\">MAGIC_RANGE</span>\n\t\t\t</li>\n\t\t\t{#each SLOT3 as EQP, EQP_I}\n\t\t\t<li>\n\t\t\t\t{#if EQP}\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['RARITY']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['LFP_BUFF']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['LFP_DEBUFF']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['ATK_BUFF']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['ATK_DEBUFF']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['MAGIC'][0]['MAGIC_COUNT']}</span>\n\t\t\t\t\t<span class=\"EQP_SPAN\">{EQP['MAGIC'][1]}</span>\n\t\t\t\t{/if}\n\t\t\t</li>\n\t\t\t{/each}\n\t\t</ul>\n\t</div>\n<!-- gachagachagachagachagachagacha -->\n</div>\n<style>\n/* https://svelte.dev/repl/57f03a5268884c8080b286c95e9a7c52?version=4.2.0 */\n:root {\n\t/* Gacha開発中はfieldをnoneをON/OFFして非表示にする */\n\t--field-none: 'block';\n\t--gacha-none: 'none';\n}\n\n.WASD, .WASD_NULL{\n\tfont-size: 30px;\n}\n.WASD_NULL{\n\tbackground-color: black;\n}\n.EQP_SPAN{\n\tdisplay: inline-block;\n\twidth: 6.5rem;\n}\n\n.field {\n\t/* background-color: var(--col-1); */\n\tdisplay: var(--field-none);\n}\n.gacha{\n\tdisplay: var(--gacha-none);\n}\n.USR_DATA_span{\n\tdisplay: inline-block;\n\twidth: 15rem;\n}\n.FLD{\n\t/* width: 100vw; */\n\t/* height: 50vh; */\n}\n.CELL1{\n\tpadding: 2vh 2vh;\n}\n.CELL2{\n\tpadding: 2vh 2vh;\n}\n.WASD, .WASD_NULL{\n\t/* padding: 3vh 3vh; */\n\t/* WASDとWASD_NULLの幅はflexで画面いっぱいにする */\n\twidth: 29vw;\n\theight: 20vh;\n\n}\n.WASD_NULL{\n\t/* 白かつ透明 */\n\tbackground-color: #FFFFFF;\n\topacity: 0;\n}\n/* INDEX_1とINDEX_2をpositionで同じ位置に配置する */\n.INDEX_1{\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n.INDEX_2{\n\t/* INDEX_2は相対位置で指定 */\n\tposition: relative;\n\ttop: 0;\n\tright: 0;\n\t/* left: 2rem; */\n\t/* 透過する */\n\topacity: 0.5;\n\t/* INDEX_2の幅はflexで画面いっぱいにする */\n\twidth: 90vw;\n}\n</style>","// import App from './App.svelte';\n// import Gacha from './Gacha.svelte';\n\n// const app = new App({\n// \t// target: document.body,\n// \ttarget: document.body,\n// \t// props: {\n// \t// \tname: 'Taro!!'\n// \t// }\n// });\n\n\n\n// const gacha = new Gacha({\n// \ttarget: document.body,\n// });\n\n\n\n// export { app, gacha };\n// // export default app;\n// // export default gacha;\n\n\n\n\n\n\n\n\n\nimport App from './App.svelte';\n\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;\n\n\n\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","destroy_component","filtered","targets","c","indexOf","flush_render_callbacks","on_destroy","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","span","span_style_value","li","div","t1_value","RARITY","t3_value","LFP_BUFF","t5_value","ATK_BUFF","if_block","MAGIC","create_if_block_4","div1","div0","t1","t3","t5","t2_value","button","t2","t","t_value","create_if_block_3","t0_value","NAME","LFP","t4_value","ATK","each_value_8","EQP","t0","t4","GLD","BDP","RBP","key","important","style","removeProperty","setProperty","t6","t6_value","t8","t8_value","t10","t10_value","t9_value","t9","create_if_block_2","each_value_4","span0","span1","span2","span3","span4","span5","span6","t12","t12_value","create_if_block_1","create_if_block","create_if_block_7","create_if_block_6","create_if_block_5","group","_inputs","inputs","input","r","div15","div11","ul0","div4","button0","button1","button2","div2","button3","button4","button5","div3","button6","button7","button8","div5","fieldset","input0","label0","input1","label1","div6","div7","div8","div9","div10","div14","div12","button9","button10","button11","button12","div13","ul1","li0","ul2","li1","field_none","gacha_none","INIT_USR_DATA_ARRAY_0","ID","TYPE","SPAWN_Y_X","LFP_DEBUFF","ATK_DEBUFF","MAGIC_COUNT","GOLD","INIT_USR_DATA_ARRAY_1","INIT_USR_DATA_ARRAY_2","START_CURRENT_Y_AND_X_ARRAY","clone_START_CURRENT_Y_AND_X_ARRAY","R","clone","CURRENT_Y_AND_X","CURRENT_USER_ID","UNIT_TURN","change_CURRENT_USR_ID","$$invalidate","ID_ARY","USR_DATA_ARRAY","V","Math","max","get_max_ID","reflect_USR_DATA","BACK_COLOR","I","COLLECT_VALUE2","breed","UNT_NUM","Target_UNT_NUM_Ary","Target_UNT_NUM","UNIT_NAME","toString","Target_UNT_NUM_NAME","UNT_DATA_OBJ","unt_position","get_UNT_position","Target_UNT_position","get_click_position","get_NON_position","NEAR_NON_POSITION","NOT_NEAR_NON_POSITION","v","shuffle","get_new_UNT_NUM","UNT_NUM_ARY","Number","split","new_UNT","NON_POSITION","random_NON_POSITION","undefined","console","log","error","omit","spawn","rootElement","KILL_STREAK","switch_field_gacha","UN_EQP","Eqp_Index","Usr_Id","MINE","remove","recharge_magic_count","LFP_ATK_Range_Array_Min_Max_Table","LFP_Min","LFP_Max","ATK_Min","ATK_Max","FLOOR","SHOW_DAMAGE","retry_data_setup","ADDITIONAL_USR_DATA_ARRAY_1","ADDITIONAL_USR_DATA_ARRAY_2","concat","set_EQP","Eqp","UNT_NUM_0","KAKUHEN","KAKUHEN_COUNTER","ORIGINAL_SLOT","SLOT","PICKEL","GOAL","DIED","SLOT2","SLOT3","make_slot","reduce","accumulator","currentValue","RARITY_NUM","RATE_AND_X_PAIR","Rate","X","slot_exe_once","Rate_Param","new_slot","make_high_rate_slot","SLOT3_KAKUHEN","Rarity","Percent","res0","res1","slice","res2","res","decrease_any_rarity","random_SLOT3_KAKUHEN","every","magic_USR_to_UNT","Magic","range","center","flat","convert_for_magic","MAGI","magic_to_Y","magic_to_X","UNT_NUM_N","replaceAll","USR_ATK_BUFF","USR_ATK_WITH_BUFF","damage_effect","Y_X_Ary","ms","Original_Color","Color_0","Color_1","Unt_Gld","Kill_Streak","kill_streak_stack_get_more_gold","UNT_Y_AND_X","change_BLC_to_NON","Y","When_Click","click_position","damage_alert","Before_LFP","After_LFP","Damage","alert","function1","function2","limitSeconds","startTime","Date","getTime","count","intervalId","setInterval","clearInterval","color_blink","setTimeout","click_or_keypress_event","Alt_Param","Key","Eqp_I","usr_id","magic","eqp_i","EqpNum","decrement_MAGIC_COUNTER","entries","UNT_ATTACK_OR_MOVE","go_to_y_x","keypress_position","w","s","offset_y","offset_x","result_go_to_y_x","go_to_y_x_setup","reset_or_init_map","when_mounted_time","go_up","when_died","usr_move","Go_to_Y","Go_to_X","attack_USR_to_UNT","get_USR_position","V2","tmp","UNT_NUM_STR","NUMBER_STR_AND_YX","V1","I1","I2","usr_position","UNT_ATK","attack_UNT_to_USR","UNT_ADJACENT_Y_AND_X","some","target_unit_num_ary","floor","random","move_position","shuffled_move_position","Move_to","change_UNT_to_NON","all_NON","random_Y_AND_X","set_UNT","get_all_USR_ID","xprod","splitEvery","UNT_NUM_1","UNT_NUM_2","UNT_NUM_3","UNT_NUM_4","UNT_NUM_5","UNT_NUM_6","UNT_NUM_7","UNT_NUM_8","UNT_NUM_9","UNT_NUM_10","UNT_NUM_11","UNT_NUM_12","UNT_NUM_13","UNT_NUM_14","UNT_NUM_15","UNT_NUM_16","UNT_DATA_CONF","FLOOR_plus_one","Table_Id","LFP_Range_Array_Min","LFP_Range_Array_Max","ATK_Range_Array_Min","ATK_Range_Array_Max","Repeat_Array_Num","Repeat_Array_Times","LFP_Range_Array","ATK_Range_Array","GLD_Range_Array","BDP_Rate","get_randam_range","Range","min","num","times","repeat","make_UNT_DATA_OBJ","BLC_count","BLC_count_percent","change_percent_BLC_to_NON","async","What","Any","Asc_Desc","sort","what_sort_by_any","__value","EQP_I","USR_DATA","USR_DATA_I","$$value","body"],"mappings":"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","x_google_ignoreList":[0]}